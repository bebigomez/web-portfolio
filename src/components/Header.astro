---
const navItems = [
  {
    title: 'Projects',
    label: 'projects',
    url: '/#projects',
  },
  {
    title: 'Experience',
    label: 'experience',
    url: '/#experience',
  },
  {
    title: 'Stack',
    label: 'stack',
    url: '/#stack',
  },
  {
    title: 'About me',
    label: 'about me',
    url: '/#about-me',
  },
];
---

<header id="myHeader" class="fixed right-0 left-0 top-0 transition-transform duration-500 z-50">
  <nav class="bg-neutral-50 dark:bg-neutral-800 text-1xl font-medium text-center py-4 md:text-3xl flex items-center justify-center">
    {navItems.map((link) => (
      <a
        aria-label={link.label}
        href={link.url}
        class={`mx-4  decoration-black dark:decoration-white ${link.title === 'About me' && 'hidden md:block'}`}
      >
        {link.title}
      </a>
    ))}
    <input id="toggle" class="toggle" type="checkbox">
  </nav>
</header>

<style>
  header nav a.activo {
    text-decoration: underline;
    text-underline-offset: 10px;
    border-radius: 100px;
  }

  #toggle {
    --size: 1.2rem;

    appearance: none;
    outline: none;
    cursor: pointer;

    margin-left: 10px;

    width: var(--size);
    height: var(--size);
    box-shadow: inset calc(var(--size) * 0.33) calc(var(--size) * -0.25) 0;
    border-radius: 999px;
    color: black;

    transition: all 500ms;

    &:checked {
      --ray-size: calc(var(--size) * -0.4);
      --offset-orthogonal: calc(var(--size) * 0.65);
      --offset-diagonal: calc(var(--size) * 0.45);

      transform: scale(0.75);
      color: white;
      box-shadow:
        inset 0 0 0 var(--size),
        calc(var(--offset-orthogonal) * -1) 0 0 var(--ray-size),
        var(--offset-orthogonal) 0 0 var(--ray-size),
        0 calc(var(--offset-orthogonal) * -1) 0 var(--ray-size),
        0 var(--offset-orthogonal) 0 var(--ray-size),
        calc(var(--offset-diagonal) * -1) calc(var(--offset-diagonal) * -1) 0
          var(--ray-size),
        var(--offset-diagonal) var(--offset-diagonal) 0 var(--ray-size),
        calc(var(--offset-diagonal) * -1) var(--offset-diagonal) 0
          var(--ray-size),
        var(--offset-diagonal) calc(var(--offset-diagonal) * -1) 0
          var(--ray-size);
    }

    z-index: 1;
    &:checked {
      & ~ .background {
        --bg: white;
      }
      & ~ .title {
        --color: hsl(40, 100%, 50%);
      }
    }
  }
</style>

<script>
  const toggleButton = document.getElementById('toggle');
  const htmlElement = document.documentElement; // Esto selecciona el <html>

  // Agrega un event listener al botón
  toggleButton!.addEventListener('click', () => {
    htmlElement.classList.toggle('dark'); // Añade o quita la clase "dark" en <html>
  });

  let lastScrollTop = 0;
  const header = document.getElementById('myHeader');

  function compareScrollPosition() {
    let currentScroll = window.scrollY || document.documentElement.scrollTop;

    if (currentScroll > lastScrollTop) {
      header!.style.transform = 'translateY(-100%)';
    } else {
      header!.style.transform = 'translateY(0)';
    }

    lastScrollTop = currentScroll;
  }

  function determineVisibleSection() {
    var sections = document.querySelectorAll('section');
    var scrollPosition = window.scrollY || document.documentElement.scrollTop;

    for (var i = 0; i < sections.length; i++) {
      var section = sections[i];
      var sectionTop = section.offsetTop;
      var sectionHeight = section.clientHeight;

      if (
        // El -2 de la línea siguiente permite que se añada el estilo a la sección.
        scrollPosition > sectionTop - 2 &&
        scrollPosition < sectionTop + sectionHeight
      ) {
        // Si la sección está visible, resaltar el enlace correspondiente en el encabezado
        var sectionId = section.getAttribute('id');
        var navLink = document.querySelector('a[href="/#' + sectionId + '"]');
        navLink?.classList.add('activo');
      } else {
        // Si la sección no está visible, quitar cualquier resaltado del enlace correspondiente en el encabezado
        var sectionId = section.getAttribute('id');
        var navLink = document.querySelector('a[href="/#' + sectionId + '"]');
        navLink?.classList.remove('activo');
      }
    }
  }

  window.addEventListener('scroll', compareScrollPosition);
  window.addEventListener('scroll', determineVisibleSection);
</script>
